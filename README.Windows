You can build a Windows binary using MinGW.

The easiest way to do this is to use a GNU/Linux system with the Mingw-cross-env
environment (http://www.nongnu.org/mingw-cross-env). This is because
Mingw-cross-env not only provides a recent version of gcc as a cross compiler,
but also all required libraries, and the nsis package to build an installer.

The following is known to work with Mingw-cross-env 2.19 (in preparation of
release) installed in /path/to/mce:

1. Build the required libraries in Mingw-cross-env:

   $ cd /path/to/mce
   $ make pthreads glew ffmpeg openal qt

   If you want to build a Bino installer later, you need to build nsis, too:
   $ make nsis

   Add Mingw-cross-env to your PATH:
   $ export PATH="/path/to/mce/usr/bin:$PATH"

2. Build Bino

   $ cd /path/to/bino
   $ ./configure --host=i686-pc-mingw32
   $ make

   Optionally build the installer (if nsis was built in Mingw-cross-env):
   $ make package-w32

The installer will install the binary and the manual along with start menu
entries, and provide uninstall functionality.

You can also copy just the bino.exe binary from the src subdirectory to any
Windows machine. If you want to access the Bino manual from the GUI, keep the
following directory structure:
c:\<path_to_bino>\bin\bino.exe
c:\<path_to_bino>\doc\bino.html
c:\<path_to_bino>\doc\<image_files...>

Note that you might want to use a newer FFmpeg version than the one shipped
with Mingw-cross-env for best results.
